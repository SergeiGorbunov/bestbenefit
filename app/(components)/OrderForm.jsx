// src/components/TelegramOrderForm.jsx (–æ–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è)
'use client';
import React, { useState } from 'react';
import { 
  PhoneIcon, 
  UserIcon, 
  CheckCircleIcon,
  ArrowPathIcon
} from '@heroicons/react/24/outline';

export default function TelegramOrderForm({ selectedService, onClose }) {
  const [formData, setFormData] = useState({
    name: '',
    phone: '',
    comment: '',
    contactMethods: {
      call: false,
      whatsapp: false,
      telegram: false,
      other: false
    }
  });
  
  const [isSubmitting, setIsSubmitting] = useState(false);
  const [isSubmitted, setIsSubmitted] = useState(false);
  const [error, setError] = useState(null);

  const handleChange = (e) => {
    const { name, value } = e.target;
    setFormData(prev => ({ ...prev, [name]: value }));
  };

  const handleCheckboxChange = (e) => {
    const { name, checked } = e.target;
    setFormData(prev => ({
      ...prev,
      contactMethods: {
        ...prev.contactMethods,
        [name]: checked
      }
    }));
  };

  const getContactMethods = () => {
    return Object.entries(formData.contactMethods)
      .filter(([_, value]) => value)
      .map(([key]) => {
        switch(key) {
          case 'call': return 'üìû –¢–µ–ª–µ—Ñ–æ–Ω–Ω—ã–π –∑–≤–æ–Ω–æ–∫';
          case 'whatsapp': return 'üíö WhatsApp';
          case 'telegram': return 'üì± Telegram';
          case 'other': return '‚ùì –î—Ä—É–≥–æ–µ';
          default: return key;
        }
      })
      .join('\n');
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    setIsSubmitting(true);
    setError(null);
    
    try {
      // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è Telegram —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ–± —É—Å–ª—É–≥–µ
      const contactMethods = getContactMethods();
      
      const message = `
üìù *–ó–∞–∫–∞–∑ —É—Å–ª—É–≥–∏ —Å —Å–∞–π—Ç–∞!*

üõéÔ∏è *–£—Å–ª—É–≥–∞:* ${selectedService.title || '–ù–µ —É–∫–∞–∑–∞–Ω–∞'}
üí∞ *–°—Ç–æ–∏–º–æ—Å—Ç—å:* ${selectedService.price || '–ù–µ —É–∫–∞–∑–∞–Ω–∞'}
${selectedService.days ? `‚è±Ô∏è *–°—Ä–æ–∫–∏:* ${selectedService.days}\n` : ''}

üë§ *–ò–º—è:* ${formData.name || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}
üì± *–¢–µ–ª–µ—Ñ–æ–Ω:* ${formData.phone || '–ù–µ —É–∫–∞–∑–∞–Ω'}

üí¨ *–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:*
${formData.comment || '–ù–µ—Ç –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è'}

üìå *–ü—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ–º—ã–µ —Å–ø–æ—Å–æ–±—ã —Å–≤—è–∑–∏:*
${contactMethods || '–ù–µ —É–∫–∞–∑–∞–Ω—ã'}
      `.trim();
      
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ API —Ä–æ—É—Ç Next.js
      const response = await fetch('/api/send-to-telegram', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ message }),
      });
      
      const responseData = await response.json();
      
      if (!response.ok || !responseData.success) {
        throw new Error(responseData.error || '–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram');
      }
      
      setIsSubmitted(true);
      
      // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É
      setFormData({
        name: '',
        phone: '',
        comment: '',
        contactMethods: {
          call: false,
          whatsapp: false,
          telegram: false,
          other: false
        }
      });
      
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞:', error);
      setError(error.message || '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–æ—Ä–º—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.');
    } finally {
      setIsSubmitting(false);
    }
  };

  if (isSubmitted) {
    return (
      <div className="text-center">
        <div className="flex justify-center mb-6">
          <CheckCircleIcon className="w-16 h-16 text-green-500" />
        </div>
        <h3 className="text-2xl font-bold mb-4">–ó–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!</h3>
        <p className="text-gray-300 mb-6">
          –ù–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è —É–¥–æ–±–Ω—ã–º —Å–ø–æ—Å–æ–±–æ–º.
        </p>
        <div className="flex justify-center gap-4">
          <button 
            onClick={() => setIsSubmitted(false)}
            className="bg-gradient-to-r from-gray-700 to-gray-900 px-6 py-3 rounded-xl font-medium"
          >
            –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞
          </button>
          <button 
            onClick={onClose}
            className="bg-gradient-to-r from-orange-500 to-orange-700 px-6 py-3 rounded-xl font-medium"
          >
            –ó–∞–∫—Ä—ã—Ç—å
          </button>
        </div>
      </div>
    );
  }

  return (
    <div>
      {selectedService && (
        <div className="mb-6 text-center">
          <h3 className="text-xl font-bold">–ó–∞–∫–∞–∑ —É—Å–ª—É–≥–∏: {selectedService.title}</h3>
          <p className="text-orange-500 mt-1">{selectedService.price}</p>
          {selectedService.days && (
            <p className="text-gray-400">–°—Ä–æ–∫: {selectedService.days}</p>
          )}
          <div className="w-24 h-1 bg-orange-500 mx-auto mt-2 rounded-full"></div>
        </div>
      )}
      
      {error && (
        <div className="mb-6 p-4 bg-red-900/50 border border-red-700 rounded-xl text-red-300">
          <p>{error}</p>
        </div>
      )}
      
      <form onSubmit={handleSubmit} className="space-y-6">
        {/* –ü–æ–ª–µ –∏–º–µ–Ω–∏ */}
        <div>
          <label className="block text-gray-400 mb-2 flex items-center">
            <UserIcon className="w-4 h-4 mr-2" />
            –í–∞—à–µ –∏–º—è
          </label>
          <input
            type="text"
            name="name"
            value={formData.name}
            onChange={handleChange}
            required
            className="w-full px-4 py-3 bg-black/50 border border-gray-800 rounded-xl focus:border-orange-500 focus:outline-none"
            placeholder="–ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤"
          />
        </div>
        
        {/* –ü–æ–ª–µ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ */}
        <div>
          <label className="block text-gray-400 mb-2 flex items-center">
            <PhoneIcon className="w-4 h-4 mr-2" />
            –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞
          </label>
          <input
            type="tel"
            name="phone"
            value={formData.phone}
            onChange={handleChange}
            required
            className="w-full px-4 py-3 bg-black/50 border border-gray-800 rounded-xl focus:border-orange-500 focus:outline-none"
            placeholder="+7 (___) ___-__-__"
          />
        </div>
        
        {/* –ü–æ–ª–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è */}
        <div>
          <label className="block text-gray-400 mb-2">
            –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π
          </label>
          <textarea
            name="comment"
            value={formData.comment}
            onChange={handleChange}
            rows={4}
            className="w-full px-4 py-3 bg-black/50 border border-gray-800 rounded-xl focus:border-orange-500 focus:outline-none"
            placeholder="–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è..."
          ></textarea>
        </div>
        
        {/* –°–ø–æ—Å–æ–±—ã —Å–≤—è–∑–∏ */}
        <div>
          <label className="block text-gray-400 mb-3">
            –ü—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ–º—ã–π —Å–ø–æ—Å–æ–± —Å–≤—è–∑–∏
          </label>
          
          <div className="grid grid-cols-2 gap-3">
            <label className="flex items-center bg-gray-800/50 border border-gray-700 rounded-xl px-4 py-3 cursor-pointer hover:border-orange-500 transition-colors">
              <input
                type="checkbox"
                name="call"
                checked={formData.contactMethods.call}
                onChange={handleCheckboxChange}
                className="w-4 h-4 text-orange-500 rounded focus:ring-orange-500 border-gray-600"
              />
              <span className="ml-3">–ó–≤–æ–Ω–æ–∫</span>
            </label>
            
            <label className="flex items-center bg-gray-800/50 border border-gray-700 rounded-xl px-4 py-3 cursor-pointer hover:border-orange-500 transition-colors">
              <input
                type="checkbox"
                name="whatsapp"
                checked={formData.contactMethods.whatsapp}
                onChange={handleCheckboxChange}
                className="w-4 h-4 text-orange-500 rounded focus:ring-orange-500 border-gray-600"
              />
              <span className="ml-3">WhatsApp</span>
            </label>
            
            <label className="flex items-center bg-gray-800/50 border border-gray-700 rounded-xl px-4 py-3 cursor-pointer hover:border-orange-500 transition-colors">
              <input
                type="checkbox"
                name="telegram"
                checked={formData.contactMethods.telegram}
                onChange={handleCheckboxChange}
                className="w-4 h-4 text-orange-500 rounded focus:ring-orange-500 border-gray-600"
              />
              <span className="ml-3">Telegram</span>
            </label>
            
            <label className="flex items-center bg-gray-800/50 border border-gray-700 rounded-xl px-4 py-3 cursor-pointer hover:border-orange-500 transition-colors">
              <input
                type="checkbox"
                name="other"
                checked={formData.contactMethods.other}
                onChange={handleCheckboxChange}
                className="w-4 h-4 text-orange-500 rounded focus:ring-orange-500 border-gray-600"
              />
              <span className="ml-3">–î—Ä—É–≥–æ–µ</span>
            </label>
          </div>
          
          <p className="text-sm text-gray-500 mt-2">
            –ï—Å–ª–∏ –≤—ã–±—Ä–∞–Ω–æ "–î—Ä—É–≥–æ–µ", —É–∫–∞–∂–∏—Ç–µ –ø—Ä–µ–¥–ø–æ—á—Ç–∏—Ç–µ–ª—å–Ω—ã–π —Å–ø–æ—Å–æ–± –≤ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏
          </p>
        </div>
        
        <button
          type="submit"
          disabled={isSubmitting}
          className={`w-full flex justify-center items-center gap-2 bg-gradient-to-r from-orange-500 to-orange-700 hover:from-orange-600 hover:to-orange-800 py-4 rounded-xl font-bold transition-all duration-300 ${
            isSubmitting ? 'opacity-70' : 'hover:scale-[1.02]'
          }`}
        >
          {isSubmitting ? (
            <>
              <ArrowPathIcon className="w-5 h-5 animate-spin" />
              –û—Ç–ø—Ä–∞–≤–∫–∞...
            </>
          ) : '–ó–∞–∫–∞–∑–∞—Ç—å —É—Å–ª—É–≥—É'}
        </button>
        
        <p className="text-xs text-gray-500 text-center">
          –ù–∞–∂–∏–º–∞—è –∫–Ω–æ–ø–∫—É, –≤—ã —Å–æ–≥–ª–∞—à–∞–µ—Ç–µ—Å—å —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
        </p>
      </form>
    </div>
  );
}